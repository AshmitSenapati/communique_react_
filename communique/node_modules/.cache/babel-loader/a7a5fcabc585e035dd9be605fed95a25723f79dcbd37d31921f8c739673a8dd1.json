{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashmit\\\\Desktop\\\\ReactPtractice\\\\communique\\\\src\\\\components\\\\Recorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recorder = ({\n  onStop,\n  disabled\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const handleStartRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    mediaRecorderRef.current.ondataavailable = event => {\n      audioChunksRef.current.push(event.data);\n    };\n    mediaRecorderRef.current.onstop = () => {\n      const audioBlob = new Blob(audioChunksRef.current, {\n        type: \"audio/wav\"\n      });\n      onStop(audioBlob);\n      audioChunksRef.current = [];\n    };\n    mediaRecorderRef.current.start();\n    setIsRecording(true);\n  };\n  const handleStopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: disabled,\n      children: \"\\u23F9 Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: disabled,\n      children: \"\\uD83C\\uDF99 Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Recorder, \"9vlr/drR7eRRS6Si05gDHrjPA2U=\");\n_c = Recorder;\nexport default Recorder;\nvar _c;\n$RefreshReg$(_c, \"Recorder\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Recorder","onStop","disabled","_s","isRecording","setIsRecording","mediaRecorderRef","audioChunksRef","handleStartRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","start","handleStopRecording","stop","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ashmit/Desktop/ReactPtractice/communique/src/components/Recorder.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst Recorder = ({ onStop, disabled }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  const handleStartRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    mediaRecorderRef.current = new MediaRecorder(stream);\r\n\r\n    mediaRecorderRef.current.ondataavailable = (event) => {\r\n      audioChunksRef.current.push(event.data);\r\n    };\r\n\r\n    mediaRecorderRef.current.onstop = () => {\r\n      const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n      onStop(audioBlob);\r\n      audioChunksRef.current = [];\r\n    };\r\n\r\n    mediaRecorderRef.current.start();\r\n    setIsRecording(true);\r\n  };\r\n\r\n  const handleStopRecording = () => {\r\n    mediaRecorderRef.current.stop();\r\n    setIsRecording(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isRecording ? (\r\n        <button onClick={handleStopRecording} disabled={disabled}>‚èπ Stop Recording</button>\r\n      ) : (\r\n        <button onClick={handleStartRecording} disabled={disabled}>üéô Start Recording</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recorder;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMU,gBAAgB,GAAGT,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMU,cAAc,GAAGV,MAAM,CAAC,EAAE,CAAC;EAEjC,MAAMW,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzEP,gBAAgB,CAACQ,OAAO,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IAEpDH,gBAAgB,CAACQ,OAAO,CAACE,eAAe,GAAIC,KAAK,IAAK;MACpDV,cAAc,CAACO,OAAO,CAACI,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;IACzC,CAAC;IAEDb,gBAAgB,CAACQ,OAAO,CAACM,MAAM,GAAG,MAAM;MACtC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACf,cAAc,CAACO,OAAO,EAAE;QAAES,IAAI,EAAE;MAAY,CAAC,CAAC;MACzEtB,MAAM,CAACoB,SAAS,CAAC;MACjBd,cAAc,CAACO,OAAO,GAAG,EAAE;IAC7B,CAAC;IAEDR,gBAAgB,CAACQ,OAAO,CAACU,KAAK,CAAC,CAAC;IAChCnB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMoB,mBAAmB,GAAGA,CAAA,KAAM;IAChCnB,gBAAgB,CAACQ,OAAO,CAACY,IAAI,CAAC,CAAC;IAC/BrB,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEN,OAAA;IAAA4B,QAAA,EACGvB,WAAW,gBACVL,OAAA;MAAQ6B,OAAO,EAAEH,mBAAoB;MAACvB,QAAQ,EAAEA,QAAS;MAAAyB,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEnFjC,OAAA;MAAQ6B,OAAO,EAAEpB,oBAAqB;MAACN,QAAQ,EAAEA,QAAS;MAAAyB,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACtF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CArCIH,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}