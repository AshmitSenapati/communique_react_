{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashmit\\\\Desktop\\\\ReactPtractice\\\\communique\\\\src\\\\components\\\\Recorder.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useReactMediaRecorder } from 'react-media-recorder';\n\n// 1. Accept `onStop` and `disabled` as props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = ({\n  onStop,\n  disabled\n}) => {\n  _s();\n  // 2. Pass a custom onStop function to the hook\n  const {\n    status,\n    startRecording,\n    stopRecording,\n    mediaBlobUrl\n  } = useReactMediaRecorder({\n    audio: true,\n    // The hook's onStop provides the blobUrl and the raw blob\n    onStop: (blobUrl, blob) => {\n      // Pass the raw blob to the parent component's handler\n      onStop(blob);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      disabled: disabled,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      disabled: disabled,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), mediaBlobUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: mediaBlobUrl,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"z8rRmnqMpYBQ+K84PROGD8hSlVo=\", false, function () {\n  return [useReactMediaRecorder];\n});\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useReactMediaRecorder","jsxDEV","_jsxDEV","AudioRecorder","onStop","disabled","_s","status","startRecording","stopRecording","mediaBlobUrl","audio","blobUrl","blob","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginTop","src","controls","_c","$RefreshReg$"],"sources":["C:/Users/Ashmit/Desktop/ReactPtractice/communique/src/components/Recorder.js"],"sourcesContent":["import React from 'react';\r\nimport { useReactMediaRecorder } from 'react-media-recorder';\r\n\r\n// 1. Accept `onStop` and `disabled` as props\r\nconst AudioRecorder = ({ onStop, disabled }) => {\r\n  \r\n  // 2. Pass a custom onStop function to the hook\r\n  const { status, startRecording, stopRecording, mediaBlobUrl } =\r\n    useReactMediaRecorder({ \r\n      audio: true,\r\n      // The hook's onStop provides the blobUrl and the raw blob\r\n      onStop: (blobUrl, blob) => {\r\n        // Pass the raw blob to the parent component's handler\r\n        onStop(blob);\r\n      }\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      {/* 3. Use the disabled prop to control the buttons */}\r\n      <p>Status: <strong>{status}</strong></p>\r\n      <button onClick={startRecording} disabled={disabled}>Start Recording</button>\r\n      <button onClick={stopRecording} disabled={disabled}>Stop Recording</button>\r\n\r\n      {/* This local preview is optional but good for testing */}\r\n      {mediaBlobUrl && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h4>Preview:</h4>\r\n          <audio src={mediaBlobUrl} controls />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioRecorder;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,sBAAsB;;AAE5D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE9C;EACA,MAAM;IAAEC,MAAM;IAAEC,cAAc;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAC3DV,qBAAqB,CAAC;IACpBW,KAAK,EAAE,IAAI;IACX;IACAP,MAAM,EAAEA,CAACQ,OAAO,EAAEC,IAAI,KAAK;MACzB;MACAT,MAAM,CAACS,IAAI,CAAC;IACd;EACF,CAAC,CAAC;EAEJ,oBACEX,OAAA;IAAAY,QAAA,gBAEEZ,OAAA;MAAAY,QAAA,GAAG,UAAQ,eAAAZ,OAAA;QAAAY,QAAA,EAASP;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACxChB,OAAA;MAAQiB,OAAO,EAAEX,cAAe;MAACH,QAAQ,EAAEA,QAAS;MAAAS,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7EhB,OAAA;MAAQiB,OAAO,EAAEV,aAAc;MAACJ,QAAQ,EAAEA,QAAS;MAAAS,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAG1ER,YAAY,iBACXR,OAAA;MAAKkB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,gBAChCZ,OAAA;QAAAY,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhB,OAAA;QAAOoB,GAAG,EAAEZ,YAAa;QAACa,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CA7BIH,aAAa;EAAA,QAIfH,qBAAqB;AAAA;AAAAwB,EAAA,GAJnBrB,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}