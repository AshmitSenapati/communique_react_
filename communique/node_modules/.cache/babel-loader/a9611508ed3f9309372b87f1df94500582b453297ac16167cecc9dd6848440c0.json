{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashmit\\\\Desktop\\\\ReactPtractice\\\\communique\\\\src\\\\TranslatorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport useWebSocket from 'react-use-websocket';\n//import { Link } from 'react-router-dom'; // Import Link for navigation\nimport './App.css';\nimport Recorder from './components/Recorder';\nimport AudioFileOpener from './components/AudioFileOpener';\nimport { transcribeAudio, translateAndGetSpeech } from './api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WS_URL = 'ws://localhost:5000/echo';\n\n// A list of languages for the dropdown\nconst languages = [{\n  code: 'es',\n  name: 'Spanish'\n}, {\n  code: 'fr',\n  name: 'French'\n}, {\n  code: 'de',\n  name: 'German'\n}, {\n  code: 'ja',\n  name: 'Japanese'\n}, {\n  code: 'it',\n  name: 'Italian'\n}];\nfunction TranslatorPage() {\n  _s();\n  // Renamed from App to TranslatorPage\n  // All of your existing state and functions (handleTranscription, handleTranslate, etc.) go here\n  // ... (pasting all your logic from the second code block)\n  const [transcript, setTranscript] = useState('');\n  const [translatedText, setTranslatedText] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [targetLanguage, setTargetLanguage] = useState('es');\n  const [isRecording, setIsRecording] = useState(false);\n  const recognitionRef = useRef(null);\n  const {\n    sendMessage,\n    lastMessage\n  } = useWebSocket(WS_URL, {\n    share: true,\n    shouldReconnect: closeEvent => true\n  });\n  useEffect(() => {\n    if (lastMessage !== null) {\n      const data = JSON.parse(lastMessage.data);\n      if (data.transcript) {\n        setTranscript(data.transcript);\n        // You would typically send this transcript for translation here\n        // For this example, we'll just set the translated text to the transcript\n        setTranslatedText(data.transcript);\n      }\n    }\n  }, [lastMessage]);\n  const handleTranscription = async audioBlob => {\n    // ... your transcription logic ...\n    setIsLoading(true);\n    setError('');\n    setTranscript('');\n    setTranslatedText('');\n    setAudioUrl('');\n    try {\n      const transcribedText = await transcribeAudio(audioBlob);\n      setTranscript(transcribedText);\n    } catch (err) {\n      setError('Error during transcription. Please try again.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const toggleRecording = () => {\n    if (!isRecording) {\n      // Start recording and streaming audio\n      // This is a simplified example. You would use a more robust library\n      // to capture the audio stream and send it via the WebSocket.\n      console.log(\"Starting recording and WebSocket stream...\");\n      setIsRecording(true);\n      sendMessage(JSON.stringify({\n        message: \"start_recording\"\n      }));\n\n      // In a real app, you would stream audio data here\n      // using something like MediaRecorder or an AudioContext.\n    } else {\n      console.log(\"Stopping recording and WebSocket stream...\");\n      setIsRecording(false);\n      sendMessage(JSON.stringify({\n        message: \"stop_recording\"\n      }));\n    }\n  };\n  const handleTranslate = async () => {\n    if (!transcript) return;\n    setIsLoading(true);\n    setError('');\n    setTranslatedText('');\n    setAudioUrl('');\n    try {\n      const result = await translateAndGetSpeech(transcript, targetLanguage);\n      setTranslatedText(result.translatedText);\n      setAudioUrl(result.audioUrl);\n    } catch (err) {\n      setError('Error during translation. Please try again.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CommUnique \\uD83C\\uDFA7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Record your voice and get it translated into different languages.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Recorder, {\n        onStop: handleTranscription,\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AudioFileOpener, {\n        onFileSelect: handleTranscription,\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Real-Time Translator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleRecording,\n          children: isRecording ? 'Stop Recording' : 'Start Recording'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Live Transcript:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: transcript,\n            readOnly: true,\n            rows: \"5\",\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Translated Text:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: translatedText,\n            readOnly: true,\n            rows: \"5\",\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Transcript:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\\"\", transcript, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"translation-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: targetLanguage,\n              onChange: e => setTargetLanguage(e.target.value),\n              disabled: isLoading,\n              children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: lang.code,\n                children: lang.name\n              }, lang.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTranslate,\n              disabled: isLoading,\n              children: \"Translate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), translatedText && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Translated Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\\"\", translatedText, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Listen:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            autoPlay: true,\n            src: audioUrl,\n            children: \"Your browser does not support the audio element.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(TranslatorPage, \"ghTiTeXsCeGh041n5rO0im+/mqM=\", false, function () {\n  return [useWebSocket];\n});\n_c = TranslatorPage;\nexport default TranslatorPage;\nvar _c;\n$RefreshReg$(_c, \"TranslatorPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useWebSocket","Recorder","AudioFileOpener","transcribeAudio","translateAndGetSpeech","jsxDEV","_jsxDEV","WS_URL","languages","code","name","TranslatorPage","_s","transcript","setTranscript","translatedText","setTranslatedText","audioUrl","setAudioUrl","isLoading","setIsLoading","error","setError","targetLanguage","setTargetLanguage","isRecording","setIsRecording","recognitionRef","sendMessage","lastMessage","share","shouldReconnect","closeEvent","data","JSON","parse","handleTranscription","audioBlob","transcribedText","err","console","toggleRecording","log","stringify","message","handleTranslate","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStop","disabled","onFileSelect","onClick","style","marginTop","value","readOnly","rows","width","onChange","e","target","map","lang","controls","autoPlay","src","_c","$RefreshReg$"],"sources":["C:/Users/Ashmit/Desktop/ReactPtractice/communique/src/TranslatorPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport useWebSocket from 'react-use-websocket';\r\n//import { Link } from 'react-router-dom'; // Import Link for navigation\r\nimport './App.css';\r\nimport Recorder from './components/Recorder';\r\nimport AudioFileOpener from './components/AudioFileOpener';\r\nimport { transcribeAudio, translateAndGetSpeech } from './api/api'\r\n\r\nconst WS_URL = 'ws://localhost:5000/echo';\r\n\r\n// A list of languages for the dropdown\r\nconst languages = [\r\n  { code: 'es', name: 'Spanish' },\r\n  { code: 'fr', name: 'French' },\r\n  { code: 'de', name: 'German' },\r\n  { code: 'ja', name: 'Japanese' },\r\n  { code: 'it', name: 'Italian' },\r\n];\r\n\r\nfunction TranslatorPage() { // Renamed from App to TranslatorPage\r\n  // All of your existing state and functions (handleTranscription, handleTranslate, etc.) go here\r\n  // ... (pasting all your logic from the second code block)\r\n  const [transcript, setTranscript] = useState('');\r\n  const [translatedText, setTranslatedText] = useState('');\r\n  const [audioUrl, setAudioUrl] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [targetLanguage, setTargetLanguage] = useState('es');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  const { sendMessage, lastMessage } = useWebSocket(WS_URL, {\r\n        share: true,\r\n        shouldReconnect: (closeEvent) => true,\r\n    });\r\n\r\n  useEffect(() => {\r\n        if (lastMessage !== null) {\r\n          const data = JSON.parse(lastMessage.data);\r\n          if (data.transcript) {\r\n              setTranscript(data.transcript);\r\n              // You would typically send this transcript for translation here\r\n              // For this example, we'll just set the translated text to the transcript\r\n              setTranslatedText(data.transcript); \r\n          }\r\n      }\r\n  }, [lastMessage]);\r\n\r\n  const handleTranscription = async (audioBlob) => {\r\n    // ... your transcription logic ...\r\n    setIsLoading(true);\r\n    setError('');\r\n    setTranscript('');\r\n    setTranslatedText('');\r\n    setAudioUrl('');\r\n\r\n    try {\r\n      const transcribedText = await transcribeAudio(audioBlob);\r\n      setTranscript(transcribedText);\r\n    } catch (err) {\r\n      setError('Error during transcription. Please try again.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleRecording = () => {\r\n        if (!isRecording) {\r\n            // Start recording and streaming audio\r\n            // This is a simplified example. You would use a more robust library\r\n            // to capture the audio stream and send it via the WebSocket.\r\n            console.log(\"Starting recording and WebSocket stream...\");\r\n            setIsRecording(true);\r\n            sendMessage(JSON.stringify({ message: \"start_recording\" }));\r\n\r\n            // In a real app, you would stream audio data here\r\n            // using something like MediaRecorder or an AudioContext.\r\n        } else {\r\n            console.log(\"Stopping recording and WebSocket stream...\");\r\n            setIsRecording(false);\r\n            sendMessage(JSON.stringify({ message: \"stop_recording\" }));\r\n        }\r\n    };\r\n\r\n  const handleTranslate = async () => {\r\n    if (!transcript) return;\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n    setTranslatedText('');\r\n    setAudioUrl('');\r\n\r\n    try {\r\n        const result = await translateAndGetSpeech(transcript, targetLanguage);\r\n        setTranslatedText(result.translatedText);\r\n        setAudioUrl(result.audioUrl);\r\n    } catch (err) {\r\n        setError('Error during translation. Please try again.');\r\n        console.error(err);\r\n    } finally {\r\n        setIsLoading(false);\r\n    }\r\n};\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        \r\n        \r\n        {/* The rest of your existing JSX for the translator */}\r\n        <h1>CommUnique 🎧</h1>\r\n        <p>Record your voice and get it translated into different languages.</p>\r\n        <Recorder onStop={handleTranscription} disabled={isLoading} />\r\n        <AudioFileOpener onFileSelect={handleTranscription} disabled={isLoading} />\r\n\r\n        {isLoading && <p className=\"loading\">Processing...</p>}\r\n        {error && <p className=\"error\">{error}</p>}\r\n\r\n        <div>\r\n            <h2>Real-Time Translator</h2>\r\n            <button onClick={toggleRecording}>\r\n                {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n            </button>\r\n            <div style={{ marginTop: '20px' }}>\r\n                <p><strong>Live Transcript:</strong></p>\r\n                <textarea \r\n                    value={transcript}\r\n                    readOnly\r\n                    rows=\"5\"\r\n                    style={{ width: '100%' }}\r\n                />\r\n            </div>\r\n            <div style={{ marginTop: '20px' }}>\r\n                <p><strong>Translated Text:</strong></p>\r\n                <textarea \r\n                    value={translatedText}\r\n                    readOnly\r\n                    rows=\"5\"\r\n                    style={{ width: '100%' }}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"results\">\r\n          {transcript && (\r\n            <div className=\"result-item\">\r\n              <h3>Transcript:</h3>\r\n              <p>\"{transcript}\"</p>\r\n\r\n              {/* 4. Show the language selector and button ONLY after transcription */}\r\n              <div className=\"translation-controls\">\r\n                <select \r\n                  value={targetLanguage} \r\n                  onChange={(e) => setTargetLanguage(e.target.value)}\r\n                  disabled={isLoading}\r\n                >\r\n                  {languages.map((lang) => (\r\n                    <option key={lang.code} value={lang.code}>\r\n                      {lang.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <button onClick={handleTranslate} disabled={isLoading}>\r\n                  Translate\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {translatedText && (\r\n            <div className=\"result-item\">\r\n              <h3>Translated Text:</h3>\r\n              <p>\"{translatedText}\"</p>\r\n            </div>\r\n          )}\r\n\r\n          {audioUrl && (\r\n            <div className=\"result-item\">\r\n              <h3>Listen:</h3>\r\n              <audio controls autoPlay src={audioUrl}>\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* ... and so on for the rest of your JSX ... */}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TranslatorPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,YAAY,MAAM,qBAAqB;AAC9C;AACA,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,SAASC,eAAe,EAAEC,qBAAqB,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,MAAM,GAAG,0BAA0B;;AAEzC;AACA,MAAMC,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW,CAAC,EAChC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,CAChC;AAED,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAAE;EAC1B;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM8B,cAAc,GAAG5B,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAM;IAAE6B,WAAW;IAAEC;EAAY,CAAC,GAAG7B,YAAY,CAACO,MAAM,EAAE;IACpDuB,KAAK,EAAE,IAAI;IACXC,eAAe,EAAGC,UAAU,IAAK;EACrC,CAAC,CAAC;EAEJlC,SAAS,CAAC,MAAM;IACV,IAAI+B,WAAW,KAAK,IAAI,EAAE;MACxB,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,WAAW,CAACI,IAAI,CAAC;MACzC,IAAIA,IAAI,CAACpB,UAAU,EAAE;QACjBC,aAAa,CAACmB,IAAI,CAACpB,UAAU,CAAC;QAC9B;QACA;QACAG,iBAAiB,CAACiB,IAAI,CAACpB,UAAU,CAAC;MACtC;IACJ;EACJ,CAAC,EAAE,CAACgB,WAAW,CAAC,CAAC;EAEjB,MAAMO,mBAAmB,GAAG,MAAOC,SAAS,IAAK;IAC/C;IACAjB,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IACZR,aAAa,CAAC,EAAE,CAAC;IACjBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,WAAW,CAAC,EAAE,CAAC;IAEf,IAAI;MACF,MAAMoB,eAAe,GAAG,MAAMnC,eAAe,CAACkC,SAAS,CAAC;MACxDvB,aAAa,CAACwB,eAAe,CAAC;IAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZjB,QAAQ,CAAC,+CAA+C,CAAC;MACzDkB,OAAO,CAACnB,KAAK,CAACkB,GAAG,CAAC;IACpB,CAAC,SAAS;MACRnB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMqB,eAAe,GAAGA,CAAA,KAAM;IACxB,IAAI,CAAChB,WAAW,EAAE;MACd;MACA;MACA;MACAe,OAAO,CAACE,GAAG,CAAC,4CAA4C,CAAC;MACzDhB,cAAc,CAAC,IAAI,CAAC;MACpBE,WAAW,CAACM,IAAI,CAACS,SAAS,CAAC;QAAEC,OAAO,EAAE;MAAkB,CAAC,CAAC,CAAC;;MAE3D;MACA;IACJ,CAAC,MAAM;MACHJ,OAAO,CAACE,GAAG,CAAC,4CAA4C,CAAC;MACzDhB,cAAc,CAAC,KAAK,CAAC;MACrBE,WAAW,CAACM,IAAI,CAACS,SAAS,CAAC;QAAEC,OAAO,EAAE;MAAiB,CAAC,CAAC,CAAC;IAC9D;EACJ,CAAC;EAEH,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAChC,UAAU,EAAE;IAEjBO,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IACZN,iBAAiB,CAAC,EAAE,CAAC;IACrBE,WAAW,CAAC,EAAE,CAAC;IAEf,IAAI;MACA,MAAM4B,MAAM,GAAG,MAAM1C,qBAAqB,CAACS,UAAU,EAAEU,cAAc,CAAC;MACtEP,iBAAiB,CAAC8B,MAAM,CAAC/B,cAAc,CAAC;MACxCG,WAAW,CAAC4B,MAAM,CAAC7B,QAAQ,CAAC;IAChC,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACVjB,QAAQ,CAAC,6CAA6C,CAAC;MACvDkB,OAAO,CAACnB,KAAK,CAACkB,GAAG,CAAC;IACtB,CAAC,SAAS;MACNnB,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAEC,oBACEd,OAAA;IAAKyC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB1C,OAAA;MAAQyC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAI5B1C,OAAA;QAAA0C,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB9C,OAAA;QAAA0C,QAAA,EAAG;MAAiE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxE9C,OAAA,CAACL,QAAQ;QAACoD,MAAM,EAAEjB,mBAAoB;QAACkB,QAAQ,EAAEnC;MAAU;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9D9C,OAAA,CAACJ,eAAe;QAACqD,YAAY,EAAEnB,mBAAoB;QAACkB,QAAQ,EAAEnC;MAAU;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE1EjC,SAAS,iBAAIb,OAAA;QAAGyC,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACrD/B,KAAK,iBAAIf,OAAA;QAAGyC,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE3B;MAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1C9C,OAAA;QAAA0C,QAAA,gBACI1C,OAAA;UAAA0C,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B9C,OAAA;UAAQkD,OAAO,EAAEf,eAAgB;UAAAO,QAAA,EAC5BvB,WAAW,GAAG,gBAAgB,GAAG;QAAiB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eACT9C,OAAA;UAAKmD,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAAV,QAAA,gBAC9B1C,OAAA;YAAA0C,QAAA,eAAG1C,OAAA;cAAA0C,QAAA,EAAQ;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACxC9C,OAAA;YACIqD,KAAK,EAAE9C,UAAW;YAClB+C,QAAQ;YACRC,IAAI,EAAC,GAAG;YACRJ,KAAK,EAAE;cAAEK,KAAK,EAAE;YAAO;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN9C,OAAA;UAAKmD,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAAV,QAAA,gBAC9B1C,OAAA;YAAA0C,QAAA,eAAG1C,OAAA;cAAA0C,QAAA,EAAQ;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACxC9C,OAAA;YACIqD,KAAK,EAAE5C,cAAe;YACtB6C,QAAQ;YACRC,IAAI,EAAC,GAAG;YACRJ,KAAK,EAAE;cAAEK,KAAK,EAAE;YAAO;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEN9C,OAAA;QAAKyC,SAAS,EAAC,SAAS;QAAAC,QAAA,GACrBnC,UAAU,iBACTP,OAAA;UAAKyC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B1C,OAAA;YAAA0C,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpB9C,OAAA;YAAA0C,QAAA,GAAG,IAAC,EAACnC,UAAU,EAAC,IAAC;UAAA;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAGrB9C,OAAA;YAAKyC,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC1C,OAAA;cACEqD,KAAK,EAAEpC,cAAe;cACtBwC,QAAQ,EAAGC,CAAC,IAAKxC,iBAAiB,CAACwC,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE;cACnDL,QAAQ,EAAEnC,SAAU;cAAA6B,QAAA,EAEnBxC,SAAS,CAAC0D,GAAG,CAAEC,IAAI,iBAClB7D,OAAA;gBAAwBqD,KAAK,EAAEQ,IAAI,CAAC1D,IAAK;gBAAAuC,QAAA,EACtCmB,IAAI,CAACzD;cAAI,GADCyD,IAAI,CAAC1D,IAAI;gBAAAwC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEd,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC,eACT9C,OAAA;cAAQkD,OAAO,EAAEX,eAAgB;cAACS,QAAQ,EAAEnC,SAAU;cAAA6B,QAAA,EAAC;YAEvD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEArC,cAAc,iBACbT,OAAA;UAAKyC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B1C,OAAA;YAAA0C,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB9C,OAAA;YAAA0C,QAAA,GAAG,IAAC,EAACjC,cAAc,EAAC,IAAC;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CACN,EAEAnC,QAAQ,iBACPX,OAAA;UAAKyC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B1C,OAAA;YAAA0C,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChB9C,OAAA;YAAO8D,QAAQ;YAACC,QAAQ;YAACC,GAAG,EAAErD,QAAS;YAAA+B,QAAA,EAAC;UAExC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxC,EAAA,CA5KQD,cAAc;EAAA,QAYgBX,YAAY;AAAA;AAAAuE,EAAA,GAZ1C5D,cAAc;AA8KvB,eAAeA,cAAc;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}